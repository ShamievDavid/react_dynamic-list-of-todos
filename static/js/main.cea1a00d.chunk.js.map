{"version":3,"sources":["enum/Status.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodoItem","todo","setShowModal","setPickedTodo","id","title","completed","className","classNames","type","onClick","TodoList","todos","map","TodoFilter","setFilteredBy","setQuery","query","onChange","event","target","value","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","pickedTodo","useState","loading","setLoading","user","setUser","userId","useEffect","getUser","finally","href","name","App","setTodos","showModal","filterBy","setFilterBy","filteredTodos","toLowerCase","trim","filter","includes","getFilteredTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cea1a00d.chunk.js","sourcesContent":["export enum Status {\n  ALL = 'ALL',\n  ACTIVE = 'ACTIVE',\n  COMPLETED = 'COMPLETED',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  setShowModal: (status: boolean) => void,\n  setPickedTodo: (todo: Todo) => void,\n};\n\nexport const TodoItem:React.FC<Props> = ({\n  todo,\n  setShowModal,\n  setPickedTodo,\n}) => {\n  const {\n    id,\n    title,\n    completed,\n  } = todo;\n\n  const handleClick = () => {\n    setPickedTodo(todo);\n    setShowModal(true);\n  };\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className=\"\"\n    >\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\" />\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={classNames({\n            'has-text-success': completed,\n            'has-text-danger': !completed,\n          })}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={handleClick}\n        >\n          <span className=\"icon\">\n            <i className=\"far fa-eye\" />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { TodoItem } from '../TodoItem/TodoItem';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setShowModal: (status: boolean) => void,\n  setPickedTodo: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setShowModal,\n  setPickedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          setShowModal={setShowModal}\n          setPickedTodo={setPickedTodo}\n        />\n      ))}\n\n      {/* <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">1</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">delectus aut autem</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n      <tr data-cy=\"todo\" className=\"has-background-info-light\">\n        <td className=\"is-vcentered\">2</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye-slash\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">1</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">delectus aut autem</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">6</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">\n            qui ullam ratione quibusdam voluptatem quia omnis\n          </p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">8</td>\n        <td className=\"is-vcentered\">\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </td>\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr> */}\n    </tbody>\n  </table>\n);\n","import { Status } from '../../enum/Status';\n\ntype Props = {\n  setFilteredBy: (status: Status) => void,\n  setQuery: (query: string) => void,\n  query: string,\n};\n\nexport const TodoFilter:React.FC<Props> = ({\n  setFilteredBy,\n  setQuery,\n  query,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => setFilteredBy(event.target.value as Status)}\n        >\n          <option\n            value={Status.ALL}\n          >\n            All\n          </option>\n\n          <option\n            value={Status.ACTIVE}\n          >\n            Active\n          </option>\n          <option value={Status.COMPLETED}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => setQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n        <button\n          data-cy=\"clearSearchButton\"\n          type=\"button\"\n          className=\"delete\"\n          onClick={() => setQuery('')}\n        />\n      </span>\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  setShowModal: (status: boolean) => void,\n  pickedTodo: Todo,\n};\n\nexport const TodoModal: React.FC<Props> = ({ setShowModal, pickedTodo }) => {\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState<User>();\n\n  const {\n    userId,\n    id,\n    title,\n    completed,\n  } = pickedTodo;\n\n  useEffect(() => {\n    setLoading(true);\n\n    getUser(userId)\n      .then(setUser)\n      .finally(() => setLoading(false));\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setShowModal(false)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Status } from './enum/Status';\n\nconst getFilteredTodos = (\n  todos: Todo[],\n  query: string,\n  filterBy: Status,\n) => {\n  let filteredTodos = [...todos];\n\n  if (query.toLowerCase().trim()) {\n    filteredTodos = filteredTodos\n      .filter(todo => todo.title.includes(query));\n  }\n\n  switch (filterBy) {\n    case Status.ALL:\n      return filteredTodos;\n    case Status.ACTIVE:\n      return filteredTodos.filter(todo => !todo.completed);\n    case Status.COMPLETED:\n      return filteredTodos.filter(todo => todo.completed);\n    default:\n      return filteredTodos;\n  }\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [showModal, setShowModal] = useState<boolean>(false);\n  const [pickedTodo, setPickedTodo] = useState<Todo>(todos[0]);\n  const [filterBy, setFilterBy] = useState<Status>(Status.ALL);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  const filteredTodos = getFilteredTodos(todos, query, filterBy);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilteredBy={setFilterBy}\n                setQuery={setQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (\n                <Loader />\n              )}\n              {!loading && todos.length > 0 && (\n                <TodoList\n                  todos={filteredTodos}\n                  setShowModal={setShowModal}\n                  setPickedTodo={setPickedTodo}\n                />\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n      {showModal && (\n        <TodoModal\n          setShowModal={setShowModal}\n          pickedTodo={pickedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}