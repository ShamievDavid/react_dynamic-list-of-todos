{"version":3,"sources":["enum/Status.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodoItem","todo","setShowModal","setPickedTodo","pickedTodo","id","title","completed","className","classNames","type","onClick","TodoList","todos","map","TodoFilter","setFilteredBy","setQuery","query","onChange","event","target","value","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","loading","setLoading","user","setUser","userId","useEffect","getUser","finally","href","name","App","setTodos","showModal","filterBy","setFilterBy","filteredTodos","preparedQuery","toLowerCase","trim","filter","includes","getFilteredTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c56a2e2.chunk.js","sourcesContent":["export enum Status {\n  ALL = 'ALL',\n  ACTIVE = 'ACTIVE',\n  COMPLETED = 'COMPLETED',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  setShowModal: (status: boolean) => void,\n  setPickedTodo: (todo: Todo) => void,\n  pickedTodo: Todo,\n};\n\nexport const TodoItem:React.FC<Props> = ({\n  todo,\n  setShowModal,\n  setPickedTodo,\n  pickedTodo,\n}) => {\n  const {\n    id,\n    title,\n    completed,\n  } = todo;\n\n  const handleClick = () => {\n    setPickedTodo(todo);\n    setShowModal(true);\n  };\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className=\"\"\n    >\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n\n        <p\n          className={classNames({\n            'has-text-success': completed,\n            'has-text-danger': !completed,\n          })}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={handleClick}\n        >\n          <span className=\"icon\">\n            <i className={classNames('far', {\n              'fa-eye': pickedTodo?.id !== todo.id,\n              'fa-eye-slash': pickedTodo?.id === todo.id,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { TodoItem } from '../TodoItem/TodoItem';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setShowModal: (status: boolean) => void,\n  setPickedTodo: (todo: Todo) => void,\n  pickedTodo: Todo,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setShowModal,\n  setPickedTodo,\n  pickedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          setShowModal={setShowModal}\n          setPickedTodo={setPickedTodo}\n          pickedTodo={pickedTodo}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n","import { Status } from '../../enum/Status';\n\ntype Props = {\n  setFilteredBy: (status: Status) => void,\n  setQuery: (query: string) => void,\n  query: string,\n};\n\nexport const TodoFilter:React.FC<Props> = ({\n  setFilteredBy,\n  setQuery,\n  query,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => setFilteredBy(event.target.value as Status)}\n        >\n          <option\n            value={Status.ALL}\n          >\n            All\n          </option>\n\n          <option\n            value={Status.ACTIVE}\n          >\n            Active\n          </option>\n          <option value={Status.COMPLETED}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => setQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        </span>\n      )}\n\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(500)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  setShowModal: (status: boolean) => void,\n  pickedTodo: Todo,\n};\n\nexport const TodoModal: React.FC<Props> = ({ setShowModal, pickedTodo }) => {\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState<User>();\n\n  const {\n    userId,\n    id,\n    title,\n    completed,\n  } = pickedTodo;\n\n  useEffect(() => {\n    setLoading(true);\n\n    getUser(userId)\n      .then(setUser)\n      .finally(() => setLoading(false));\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setShowModal(false)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Status } from './enum/Status';\n\nconst getFilteredTodos = (\n  todos: Todo[],\n  query: string,\n  filterBy: Status,\n) => {\n  let filteredTodos = [...todos];\n\n  if (query) {\n    const preparedQuery = query.toLowerCase().trim();\n\n    filteredTodos = filteredTodos\n      .filter(todo => todo.title.toLowerCase().includes(preparedQuery));\n  }\n\n  switch (filterBy) {\n    case Status.ALL:\n      return filteredTodos;\n    case Status.ACTIVE:\n      return filteredTodos.filter(todo => !todo.completed);\n    case Status.COMPLETED:\n      return filteredTodos.filter(todo => todo.completed);\n    default:\n      return filteredTodos;\n  }\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [showModal, setShowModal] = useState<boolean>(false);\n  const [pickedTodo, setPickedTodo] = useState<Todo>(todos[0]);\n  const [filterBy, setFilterBy] = useState<Status>(Status.ALL);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  const filteredTodos = getFilteredTodos(todos, query, filterBy);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilteredBy={setFilterBy}\n                setQuery={setQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (\n                <Loader />\n              )}\n              {!loading && todos.length > 0 && (\n                <TodoList\n                  todos={filteredTodos}\n                  setShowModal={setShowModal}\n                  setPickedTodo={setPickedTodo}\n                  pickedTodo={pickedTodo}\n                />\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n      {showModal && (\n        <TodoModal\n          setShowModal={setShowModal}\n          pickedTodo={pickedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}